name: Build & Deploy
run-name: Build & Deploy ${{ github.event.release.tag_name }}

on:
  release:
    types:
      - released

permissions:
  contents: read
  deployments: write

concurrency:
  group: "build-and-deploy"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    environment: deployment
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: repository
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: |
          npm install terser@5
          npm install html-minifier-terser@7
      - name: Replace {VERSION} with ${{ github.event.release.tag_name }}
        run: find repository/ \( -type d -name favicons -prune \) -o -type f -exec sed -i "s/{VERSION}/${{ github.event.release.tag_name }}/g" {} +
      - name: Minify website
        run: |
          npx html-minifier-terser --collapse-whitespace --remove-attribute-quotes --remove-comments --minify-js '{"module":true,"compress":{"global_defs":{"ADVANCED_OPTIONS_FILE":"a.js"}},"mangle":{"properties":{"regex":".*"}}}' --minify-css true --file-ext html --input-dir repository/ --output-dir _site/
          npx terser --module --compress --mangle --mangle-props 'regex=".*"' --output _site/a.js -- repository/advanced-options.mjs
      - name: Create manifest.webmanifest
        run: echo '{"name":"Private Secret Santa Generator","short_name":"Secret Santa","description":"Private Secret Santa generator with no email, no cookies, and no data sent to the server, with exclusions to prevent specific pairings.","start_url":".","display":"standalone","icons":[{"src":"favicon-192x192.png","sizes":"192x192","type":"image/png"},{"src":"favicon-512x512.png","sizes":"512x512","type":"image/png"}]}' > _site/manifest.webmanifest
      - name: Move images
        run: mv repository/images/* _site/
      - name: Create robots.txt
        run: |
          echo -e "User-agent: *\nAllow: /\nSitemap: https://privatesecretsanta.com/sitemap.xml" > _site/robots.txt
      - name: Create sitemap.xml
        run: |
          echo -n '<?xml version="1.0" encoding="UTF-8"?>' > _site/sitemap.xml
          echo -n '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> _site/sitemap.xml
          find _site/ -type f -name "*.html" | while read -r FILE_PATH; do
            URL_PATH=$(echo ${FILE_PATH#*/} | sed "s/index\.html$//;s/\.html$//")
            echo -n "<url><loc>https://privatesecretsanta.com/$URL_PATH</loc></url>" >> _site/sitemap.xml
          done
          echo -n "</urlset>" >> _site/sitemap.xml
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: pages deploy _site/ --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }} --commit-message=${{ github.event.release.tag_name }}
